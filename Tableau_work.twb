<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Table 3' inline='true' name='federated.15cthgo1h46r2j1g3bghi0ejck6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0kmcdzs0ukwy4u18i0s061kbkzob'>
            <connection authentication='username-password' class='postgres' dbname='CovidPortfolio' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0kmcdzs0ukwy4u18i0s061kbkzob' name='Custom SQL Query' type='text'>SELECT LOCATION, POPULATION, MAX(TOTAL_CASES) AS HIGHESTINFECTIONCOUNT,&#13;
MAX((TOTAL_CASES / POPULATION)) * 100 AS PERCENTPOPULATIONINFECTED&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE (continent IS NOT NULL)&#13;
GROUP BY LOCATION, POPULATION&#13;
ORDER BY PERCENTPOPULATIONINFECTED DESC</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0kmcdzs0ukwy4u18i0s061kbkzob' name='Custom SQL Query' type='text'>SELECT LOCATION, POPULATION, MAX(TOTAL_CASES) AS HIGHESTINFECTIONCOUNT,&#13;
MAX((TOTAL_CASES / POPULATION)) * 100 AS PERCENTPOPULATIONINFECTED&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE (continent IS NOT NULL)&#13;
GROUP BY LOCATION, POPULATION&#13;
ORDER BY PERCENTPOPULATIONINFECTED DESC</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LPT_RBR' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F34A8F642D3A4E92A6C5FA1107C9FDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F34A8F642D3A4E92A6C5FA1107C9FDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highestinfectioncount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[highestinfectioncount]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>highestinfectioncount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F34A8F642D3A4E92A6C5FA1107C9FDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentpopulationinfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentpopulationinfected]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>percentpopulationinfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F34A8F642D3A4E92A6C5FA1107C9FDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_F34A8F642D3A4E92A6C5FA1107C9FDA7]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_F34A8F642D3A4E92A6C5FA1107C9FDA7'>
            <properties context=''>
              <relation connection='postgres.0kmcdzs0ukwy4u18i0s061kbkzob' name='Custom SQL Query' type='text'>SELECT LOCATION, POPULATION, MAX(TOTAL_CASES) AS HIGHESTINFECTIONCOUNT,&#13;
MAX((TOTAL_CASES / POPULATION)) * 100 AS PERCENTPOPULATIONINFECTED&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE (continent IS NOT NULL)&#13;
GROUP BY LOCATION, POPULATION&#13;
ORDER BY PERCENTPOPULATIONINFECTED DESC</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Table 2' inline='true' name='federated.1892qk80bomox41fqghfk0voert9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.00zdduu0xlfcxb1048sq60cme7tp'>
            <connection authentication='username-password' class='postgres' dbname='CovidPortfolio' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.00zdduu0xlfcxb1048sq60cme7tp' name='Custom SQL Query' type='text'>SELECT LOCATION, SUM(NEW_DEATHS) AS TOTALDEATHCOUNT&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE CONTINENT IS NULL&#13;
AND LOCATION IN(&apos;Europe&apos;,&apos;Asia&apos;,&apos;North America&apos;,&apos;South America&apos;, &apos;Africa&apos;, &apos;Oceania&apos;)&#13;
-- AND LOCATION NOT IN (&apos;World&apos;,&apos;European Union&apos;,&apos;International&apos;, &apos;High income&apos;, &apos;Upper middle income&apos;, &apos;Lower middle income&apos;, &apos;Low income&apos;)&#13;
GROUP BY LOCATION&#13;
ORDER BY TOTALDEATHCOUNT DESC</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.00zdduu0xlfcxb1048sq60cme7tp' name='Custom SQL Query' type='text'>SELECT LOCATION, SUM(NEW_DEATHS) AS TOTALDEATHCOUNT&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE CONTINENT IS NULL&#13;
AND LOCATION IN(&apos;Europe&apos;,&apos;Asia&apos;,&apos;North America&apos;,&apos;South America&apos;, &apos;Africa&apos;, &apos;Oceania&apos;)&#13;
-- AND LOCATION NOT IN (&apos;World&apos;,&apos;European Union&apos;,&apos;International&apos;, &apos;High income&apos;, &apos;Upper middle income&apos;, &apos;Lower middle income&apos;, &apos;Low income&apos;)&#13;
GROUP BY LOCATION&#13;
ORDER BY TOTALDEATHCOUNT DESC</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LPT_RBR' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4121637A974B4D4B855AC6607BBA89BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totaldeathcount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[totaldeathcount]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>totaldeathcount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4121637A974B4D4B855AC6607BBA89BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_4121637A974B4D4B855AC6607BBA89BD]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_4121637A974B4D4B855AC6607BBA89BD'>
            <properties context=''>
              <relation connection='postgres.00zdduu0xlfcxb1048sq60cme7tp' name='Custom SQL Query' type='text'>SELECT LOCATION, SUM(NEW_DEATHS) AS TOTALDEATHCOUNT&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE CONTINENT IS NULL&#13;
AND LOCATION IN(&apos;Europe&apos;,&apos;Asia&apos;,&apos;North America&apos;,&apos;South America&apos;, &apos;Africa&apos;, &apos;Oceania&apos;)&#13;
-- AND LOCATION NOT IN (&apos;World&apos;,&apos;European Union&apos;,&apos;International&apos;, &apos;High income&apos;, &apos;Upper middle income&apos;, &apos;Lower middle income&apos;, &apos;Low income&apos;)&#13;
GROUP BY LOCATION&#13;
ORDER BY TOTALDEATHCOUNT DESC</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Table 1' inline='true' name='federated.0pnxakk0xa5fv51h42cel1akd82e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1rf3g460jqyspj1ahulyk1eqkh3h'>
            <connection authentication='username-password' class='postgres' dbname='CovidPortfolio' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1rf3g460jqyspj1ahulyk1eqkh3h' name='Custom SQL Query' type='text'>SELECT SUM(NEW_CASES) AS TOTAL_CASES, SUM(NEW_DEATHS) AS TOTAL_DEATHS,&#13;
SUM(NEW_DEATHS)/SUM(NEW_CASES) * 100 AS DEATHPERCENTAGE&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE CONTINENT IS NOT NULL&#13;
ORDER BY 1,2</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1rf3g460jqyspj1ahulyk1eqkh3h' name='Custom SQL Query' type='text'>SELECT SUM(NEW_CASES) AS TOTAL_CASES, SUM(NEW_DEATHS) AS TOTAL_DEATHS,&#13;
SUM(NEW_DEATHS)/SUM(NEW_CASES) * 100 AS DEATHPERCENTAGE&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE CONTINENT IS NOT NULL&#13;
ORDER BY 1,2</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F2E1D5E7732E4D3B9E1E45EE84032E2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F2E1D5E7732E4D3B9E1E45EE84032E2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathpercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deathpercentage]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>deathpercentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F2E1D5E7732E4D3B9E1E45EE84032E2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_F2E1D5E7732E4D3B9E1E45EE84032E2B]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_F2E1D5E7732E4D3B9E1E45EE84032E2B'>
            <properties context=''>
              <relation connection='postgres.1rf3g460jqyspj1ahulyk1eqkh3h' name='Custom SQL Query' type='text'>SELECT SUM(NEW_CASES) AS TOTAL_CASES, SUM(NEW_DEATHS) AS TOTAL_DEATHS,&#13;
SUM(NEW_DEATHS)/SUM(NEW_CASES) * 100 AS DEATHPERCENTAGE&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE CONTINENT IS NOT NULL&#13;
ORDER BY 1,2</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Table 4' inline='true' name='federated.01luxnc1bchrmd1ehlojq1nxisoh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1gf6s7s1bba6qv14psh901hb833f'>
            <connection authentication='username-password' class='postgres' dbname='CovidPortfolio' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1gf6s7s1bba6qv14psh901hb833f' name='Custom SQL Query' type='text'>SELECT LOCATION, POPULATION, date, MAX(TOTAL_CASES) AS HIGHESTINFECTIONCOUNT,&#13;
MAX((TOTAL_CASES / POPULATION)) * 100 AS PERCENTPOPULATIONINFECTED&#13;
FROM PUBLIC.&quot;CovidDeaths&quot;&#13;
WHERE TOTAL_CASES IS NOT NULL&#13;
GROUP BY LOCATION, POPULATION, date&#13;
ORDER BY PERCENTPOPULATIONINFECTED DESC</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1gf6s7s1bba6qv14psh901hb833f' name='Custom SQL Query' type='text'>SELECT LOCATION, POPULATION, date, MAX(TOTAL_CASES) AS HIGHESTINFECTIONCOUNT,&#13;
MAX((TOTAL_CASES / POPULATION)) * 100 AS PERCENTPOPULATIONINFECTED&#13;
FROM PUBLIC.&quot;CovidDeaths&quot;&#13;
WHERE TOTAL_CASES IS NOT NULL&#13;
GROUP BY LOCATION, POPULATION, date&#13;
ORDER BY PERCENTPOPULATIONINFECTED DESC</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LPT_RBR' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AA295ABB632A43A5B4B8FF2D07D2E16B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AA295ABB632A43A5B4B8FF2D07D2E16B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AA295ABB632A43A5B4B8FF2D07D2E16B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highestinfectioncount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[highestinfectioncount]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>highestinfectioncount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AA295ABB632A43A5B4B8FF2D07D2E16B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentpopulationinfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentpopulationinfected]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>percentpopulationinfected</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AA295ABB632A43A5B4B8FF2D07D2E16B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_AA295ABB632A43A5B4B8FF2D07D2E16B]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_AA295ABB632A43A5B4B8FF2D07D2E16B'>
            <properties context=''>
              <relation connection='postgres.1gf6s7s1bba6qv14psh901hb833f' name='Custom SQL Query' type='text'>SELECT LOCATION, POPULATION, date, MAX(TOTAL_CASES) AS HIGHESTINFECTIONCOUNT,&#13;
MAX((TOTAL_CASES / POPULATION)) * 100 AS PERCENTPOPULATIONINFECTED&#13;
FROM PUBLIC.&quot;CovidDeaths&quot;&#13;
WHERE TOTAL_CASES IS NOT NULL&#13;
GROUP BY LOCATION, POPULATION, date&#13;
ORDER BY PERCENTPOPULATIONINFECTED DESC</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Tabela5 Brazil' inline='true' name='federated.0syycve1oc8t8y17ks2w70f44pkd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.19uyyfv0e90x001fo0zez07tcuek'>
            <connection authentication='username-password' class='postgres' dbname='CovidPortfolio' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.19uyyfv0e90x001fo0zez07tcuek' name='Custom SQL Query' type='text'>SELECT location, date, total_cases, total_deaths, ((total_deaths/total_cases)*100) AS PorcentagemMortes, ((total_cases/(population))*100) AS PorcentagemCovid&#13;
FROM PUBLIC.&quot;CovidDeaths&quot;&#13;
WHERE location = &apos;Brazil&apos;&#13;
ORDER BY location, date</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.19uyyfv0e90x001fo0zez07tcuek' name='Custom SQL Query' type='text'>SELECT location, date, total_cases, total_deaths, ((total_deaths/total_cases)*100) AS PorcentagemMortes, ((total_cases/(population))*100) AS PorcentagemCovid&#13;
FROM PUBLIC.&quot;CovidDeaths&quot;&#13;
WHERE location = &apos;Brazil&apos;&#13;
ORDER BY location, date</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LPT_RBR' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_93DA42230E9D4FF9A59C117F30D3AECB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_93DA42230E9D4FF9A59C117F30D3AECB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_93DA42230E9D4FF9A59C117F30D3AECB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_93DA42230E9D4FF9A59C117F30D3AECB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>porcentagemmortes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[porcentagemmortes]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>porcentagemmortes</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_93DA42230E9D4FF9A59C117F30D3AECB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>porcentagemcovid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[porcentagemcovid]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>porcentagemcovid</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_93DA42230E9D4FF9A59C117F30D3AECB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_93DA42230E9D4FF9A59C117F30D3AECB]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_93DA42230E9D4FF9A59C117F30D3AECB'>
            <properties context=''>
              <relation connection='postgres.19uyyfv0e90x001fo0zez07tcuek' name='Custom SQL Query' type='text'>SELECT location, date, total_cases, total_deaths, ((total_deaths/total_cases)*100) AS PorcentagemMortes, ((total_cases/(population))*100) AS PorcentagemCovid&#13;
FROM PUBLIC.&quot;CovidDeaths&quot;&#13;
WHERE location = &apos;Brazil&apos;&#13;
ORDER BY location, date</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Table 1' name='federated.0pnxakk0xa5fv51h42cel1akd82e' />
          </datasources>
          <datasource-dependencies datasource='federated.0pnxakk0xa5fv51h42cel1akd82e'>
            <column datatype='real' name='[deathpercentage]' role='measure' type='quantitative' />
            <column-instance column='[deathpercentage]' derivation='Sum' name='[sum:deathpercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pnxakk0xa5fv51h42cel1akd82e].[sum:deathpercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pnxakk0xa5fv51h42cel1akd82e].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pnxakk0xa5fv51h42cel1akd82e].[sum:total_cases:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0pnxakk0xa5fv51h42cel1akd82e].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0pnxakk0xa5fv51h42cel1akd82e].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0pnxakk0xa5fv51h42cel1akd82e].[sum:deathpercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='3' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='tick-color' value='#000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]' value='203' />
            <format attr='height' value='43' />
            <format attr='text-format' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-align' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='center' />
            <format attr='text-orientation' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='0' />
            <format attr='vertical-align' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='center' />
            <format attr='wrap' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='auto' />
            <format attr='font-weight' data-class='total' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='normal' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='color' data-class='total' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]' value='#aaaaff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='3' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='true' />
            <format attr='break-on-special' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='true' />
            <format attr='show-null-value-warning' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='true' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='3' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='3' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='3' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='3' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='3' />
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='3' />
                <format attr='stroke-color' value='#1b1b1b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{72EAD59D-2A7D-4C3C-9BCF-37F3CD642EB8}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Table 2' name='federated.1892qk80bomox41fqghfk0voert9' />
          </datasources>
          <datasource-dependencies datasource='federated.1892qk80bomox41fqghfk0voert9'>
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[totaldeathcount]' derivation='Sum' name='[sum:totaldeathcount:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[totaldeathcount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1892qk80bomox41fqghfk0voert9].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1892qk80bomox41fqghfk0voert9].[none:location:nk]' value='135' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='56' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
            <format attr='font-style' value='normal' />
            <format attr='background-color' value='#ffffff' />
            <format attr='font-size' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1892qk80bomox41fqghfk0voert9].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1892qk80bomox41fqghfk0voert9].[sum:totaldeathcount:qk]</rows>
        <cols>[federated.1892qk80bomox41fqghfk0voert9].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{EA67B32E-23D3-4C99-8D2F-37066BC3636A}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percent Pop. Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Table 3' name='federated.15cthgo1h46r2j1g3bghi0ejck6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15cthgo1h46r2j1g3bghi0ejck6r'>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[percentpopulationinfected]' role='measure' type='quantitative' />
            <column-instance column='[percentpopulationinfected]' derivation='Sum' name='[sum:percentpopulationinfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[Longitude (generated)]' field-type='quantitative' max='15979360.631067015' min='-20573700.555763554' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[Latitude (generated)]' field-type='quantitative' max='19384881.106198147' min='-10500364.00555481' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[sum:percentpopulationinfected:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[sum:percentpopulationinfected:qk]' value='Percent Pop. Infected&#10;'>
              <formatted-text>
                <run>Percent Pop. Infected&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[none:location:nk]' />
              <color column='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[sum:percentpopulationinfected:qk]' />
              <geometry column='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15cthgo1h46r2j1g3bghi0ejck6r].[Latitude (generated)]</rows>
        <cols>[federated.15cthgo1h46r2j1g3bghi0ejck6r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{621E4738-CA6D-40DF-BF08-AF98539B0EA3}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Table 4' name='federated.01luxnc1bchrmd1ehlojq1nxisoh' />
          </datasources>
          <datasource-dependencies datasource='federated.01luxnc1bchrmd1ehlojq1nxisoh'>
            <column-instance column='[percentpopulationinfected]' derivation='Avg' name='[avg:percentpopulationinfected:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[percentpopulationinfected]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[tmn:date:qk]' value='189' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]' />
              <text column='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01luxnc1bchrmd1ehlojq1nxisoh].[avg:percentpopulationinfected:qk]</rows>
        <cols>[federated.01luxnc1bchrmd1ehlojq1nxisoh].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{CEF6568E-5ADE-4BA9-BF7E-EF98157E5BBA}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tabela5 Brazil' name='federated.0syycve1oc8t8y17ks2w70f44pkd' />
          </datasources>
          <datasource-dependencies datasource='federated.0syycve1oc8t8y17ks2w70f44pkd' />
          <filter class='categorical' column='[federated.0syycve1oc8t8y17ks2w70f44pkd].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.0syycve1oc8t8y17ks2w70f44pkd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0A0CD779-BD28-43D6-AA78-E57F1D8C7313}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='9' param='horz' type-v2='layout-flow' w='98728' x='636' y='940'>
            <zone h='98120' id='7' type-v2='layout-basic' w='85999' x='636' y='940'>
              <zone h='15394' id='3' name='Sheet 1' w='44770' x='636' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='5' name='Sheet 2' w='41229' x='45406' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='73913' id='6' name='Sheet 3' w='44770' x='636' y='16334'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='11' name='Sheet 4' w='41229' x='45406' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8813' id='13' name='Sheet 3' pane-specification-id='0' param='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[sum:percentpopulationinfected:qk]' type-v2='color' w='44770' x='636' y='90247'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='12729' x='86635' y='940'>
              <zone fixed-size='147' h='18214' id='12' is-fixed='true' name='Sheet 4' pane-specification-id='0' param='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]' type-v2='color' w='12729' x='86635' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='18' param='vert' type-v2='layout-flow' w='98728' x='636' y='940'>
                <zone fixed-size='115' h='15394' id='3' is-fixed='true' name='Sheet 1' w='44770' x='636' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='5' is-fixed='true' name='Sheet 2' w='41229' x='45406' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73913' id='6' is-fixed='true' name='Sheet 3' w='44770' x='636' y='16334'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8813' id='13' name='Sheet 3' pane-specification-id='0' param='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[sum:percentpopulationinfected:qk]' type-v2='color' w='44770' x='636' y='90247'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='11' is-fixed='true' name='Sheet 4' w='41229' x='45406' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='147' h='18214' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]' type-v2='color' w='12729' x='86635' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D7F97685-19CA-4E46-BED3-28E58E182C0C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='141'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8ED303A-5C60-4760-ACD6-52D267641A00}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1892qk80bomox41fqghfk0voert9].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B72BF3A9-01CC-4ED3-8C53-025546E578D6}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[sum:percentpopulationinfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15cthgo1h46r2j1g3bghi0ejck6r].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6B22F279-9CB1-4D16-B30D-9113E274096A}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='172'>
            <card pane-specification-id='0' param='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]</field>
            <field>[federated.01luxnc1bchrmd1ehlojq1nxisoh].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7AA71B31-2AFB-4CD7-B535-060A793811A5}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AEF464C6-C949-486D-8FEC-60B8A8D75568}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B1A47F36-0AA9-457A-B9DE-049B47557B35}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='67' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABDCAYAAADK+ApxAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAMAUlEQVR4nO2de1BUV57HP/JohBYC8lCIg2M0MWhkZGiygkpKi1iBONkUGR9RNxF8DHGT
      6FZmBqw4Y0wkasxjUyROiaZUatFVFzVKDDLURHQEo2QcpKKiQsaOoE3zsqV5NN199g8MZaeB
      bjBB4Z5PVVfBr3+Pc6n7vb9zzu2+DBFCCCQSheJyvwcgkdxPpAAkikYKQKJopAAkikYKQKJo
      pAAkikYKQKJo3Bw5DBkypD/GIZHcF2QHkCgahx3gbvbtkzeNJYML2QEkikYKQKJopAAeJOp2
      sWOThtwr93sgykEKoCuurGXTpoWcrutDrDyJBxRSABJF06tdICVwJVfDgW87fi7crqEQIOg1
      lia9jD9gbvgrBbmbuVBdT7urNyPG/xcJ8c8R5AZ1pxeyvbAcgJoDGjrSPEti6joexciNc5so
      KD6J7vZtLLjjMXwqUxL+zJSHfe5t0C3nOf3l25yu/BdtFk+8Quby7/NeI1TlRE2bWHc8hkcw
      KfZPzBgf3HF1tN6gPP9N8i+cp7m9D/EPOFIAP+LR2SWkjl/LpgNXeWppNlP873rTkMP+z97H
      FLWF3y2MwNN8kdN7ksnKvk3Sywvxn5JN6qO72LE9g8DEEmY/enfmRm4ZxxL929/zyyAf3Mw1
      XMz7Dw7/3xZGvpbGL/t6tlgvcDL7d5R6r2Le6y8Q7GairjKPxmZA5bim9u+rKLw1n5deTyZY
      ZaW1ppDjX5+gYfw8/DFSkbeYvFsvMffVTIJVVhr+uZqsPal4LP8LET6O4h98BoJIHxi0X3+K
      1mcxzzwVgdoFXFRhxMxOwf/mZ/xD6yj6YR6f9jLjgnw6rjpuQYRFPodPaxk3G/o+pqbSDIrq
      niT2uXkEq9zAxQv/cYmM9XWuZlubAdTB+KrcABVDg57mmd/cOXmb8jhT5kvU0ws7cqPCb/IS
      JqvPcqmiznH8AEB2AKep4ma1AULCGHG32X8MgRi4Xn0NQkf3mKGlai8Ff8uiQqejzfKDdfw9
      jUp3458QlMLDnn2rOTrsBbwPruMvW79kwq8SCZ8YS4i36k7yC1RRgfYzDSd/lDeorQnw7zl+
      ACAF0F8Ycji0578xRWWw5EUN3m507Bhtz7+vNVVjV5Py+mJuVuRzvvQT/rfwTwydtImkhFg8
      rWYsjGX6kr3EBHRdosf4n+/IfjLkFMhpHmZkiA9UX0R3t1l3kWp8GBXS89Uf3Xm0lplMmX7n
      RPyJ+EVoDNT8g6qWvtd0UQUTEvYyz8w/xCvPz6S97DPKGoHAxxhJBZXXdN0H9xQ/AJAC6Irg
      cEKppLz8MmbAajZhBUL/7T8JNewkr/AcRitYTRcpytuJYeQSfh16J9b/CUYNhX+V/w2jFTCb
      MAP4hOBHMZfK67FiorXmr+Qd2UlfbjXcjWrCEqb4neLE4b3cMJkBE7evHaWi0Zma1yg58me+
      uXYDkxXAhNkM4IW7G+D7GyLHuVP11R8pvFbTcRxmAzVXt3K8rMpx/ABgiKPHotz9cWjlfBjO
      zK3yzRz88jC6tnbcf5FG8oLf4kvP26A/0FK1iy9zt3OlsQVXj3m8sOoPjMFA1ck/sv/rEtrw
      ZsT4FJ7+dSv5/5NP2A+7TXXd7SA54EfboL6jXyI+cRmhKkc1zdyqzObEqWyuVNfTDrh7hTNh
      VjqzutwGBVePEYwYO5epsQt55CEcxz/gSAFIFM0AaVQK5E43qOnBJeipHJKmOFh7SHpEdgCJ
      ohkI0zSJ5GejVx1AIhlsyA4gUTRSABJF06tdIPkkdclgQ3YAiaKRApAoGikAiaKRApAoGikA
      iaKRApAoGikAiaKRApAoGikAiaKRApAoGikAiaKRApAoGikAiaIZ9N8Jtlqt5ObmkpmZybvv
      vkt4eLjN+wUFBaSlpdnFbdy4kbi4OABMJhNZWVlkZWXR2trK1KlTWb16NUFBQd3WNRqNvPrq
      q5SVldnYJ02axCeffILRaGTx4sXU1Nh/61etVpORkWE31traWlJSUmhubmbnzp091q+urub9
      99+nuLgYgGnTpvHmm2/i6+sLQGZmJpmZmV3GxsXFsXHjRqd8uqOyspK1a9dSXl7OQw89xMqV
      K0lISMDFxaVXPj87wgFA52ugUV5eLhYsWCCWLl0q5s+fL0pLS+18tm7dKrKzs3vMs23bNrFk
      yRKh1+uFyWQSn376qVi2bJloamrqNkan04lXXnlF1NXV9XrMK1asEPX19TZ2i8UiPvroI5Ge
      ni6SkpKETqfrNoderxcvvvii2LNnjzCZTMJoNIr09HSHY7ZYLCI9PV3k5OTck09VVZWYM2eO
      +Pzzz4XFYhFXr14Vc+bMEceOHeuVT38waKdARqORAwcOsGbNGj788EP8/bt+XKtWqyU0NLTL
      9wD0ej1nzpxhzZo1BAQE4O7uztKlS/H19aWkpKTbuJs3b6JWq1Gr1b0a97Fjx4iJicHPz8/G
      fvbsWSorK5k/f77DHPn5+URERDB37lzc3d3x8vJi5cqVCCF6HPP169f5/vvviY2NvSefgoIC
      oqOjmT17Ni4uLowdO5Y33niDL774gpaWFqd9+oNBKwC1Wk1aWhphYWHdtlSj0Uhra2uPAvju
      u+/w8/Nj1KhRnTaVSkVMTAzffPNNt3E1NTUEBwfj4eHh9Ji1Wi1lZWXMmjXLxt7Q0MCOHTtY
      vnw5w4YNc5intraWiIgIm+NWq9VERUX1OOZDhw4RHR1NQEA3DwJ1wsdsNvPtt98ydepUm/qP
      P/44FosFvV7vlE9/MWgF4AxGo5HLly+TmJiIRqMhOjqapKQkSktLO30MBgPe3t64udkulwIC
      Aqivr+82t1arZffu3Wg0GjQaDbNmzWLLli00Nzd3G5OXl8e0adMIDAzstFmtVvbt24dGo+GJ
      J55w6riGDRtGZWWlnf2RRx7pcs0BHWuGK1euEB8f321eZ3za2towmUx2HWzo0KF4enrS2Njo
      lE9/MegXwT0RFBTE4cOH7exZWVns37+f9evX9zl3cnIyycnJNja9Xk9KSgqpqalMnDjRrmZr
      ayvLly/vtBkMBt555x2WLVvGY4891qvaZWVlLFiwgKtXr+Lq6srkyZMZN25cl/56vZ633nqL
      NWvW2Iivtz4DEUULoDtCQkK4cOECAD4+Pty+fRuz2WzTBWpraxk+fHiv8np5eeHj44PFYrGx
      19bWUlRUZLcbVVJSQmFhIV999ZVdroSEhM4dpa7WGZMmTWL37t02tszMTLurLnSsGSZMmGAz
      zeuLD4CHhwcqlYqGBtv/+tHa2kpLSwu+vr5O+fQXip4CNTc3YzKZ7OzV1dWdc+0xY8bQ0NDA
      9evXO983mUwUFRURGRnZZV6z2UxTU1OX9YxGI56etk/OP3HiBKGhoXZrkZkzZ3LmzBlKSko6
      X0ePHiU8PJyjR4+yY8cOpxfZDQ0NnDt3jpiYGDt7UVFRj9uPzvj8gJubGxMnTuTUqVNYrdZO
      +6VLl3B1dSUwMNApn/5C0QI4ffo0SUlJnD17lvb2dtrb2zl48CD79u3j+eefByAwMJAnn3yS
      9evXU1tbS3t7O9u3b6exsRGNRtNlXpPJRFpaGhkZGZ0LOq1Wy7p16xg9ejRjxozp9DUYDBQU
      FJCYmPiT7X/X19ezd+9em9pr164lIiLCbip18uRJRo4c2e30yFmfu4mLi6O4uJjc3FysVisV
      FRV88MEHPPvss53id8anX3C0T8oAvQ9QWloqYmNjRWRkpN0rPj5e6HQ6YbFYRHFxsVi0aJGI
      iooSUVFRYtGiReL8+fM2udra2sS2bdvE9OnTRVRUlFi1apXdPnxqaqpITU3t/N1gMIj33ntP
      zJgxQ0RGRooZM2aIjz/+WLS0tNjE5eTkiLfffltYLBanjkun09ndBygtLRXx8fGd9zlaWlrE
      li1bOmvHxcWJXbt2iba2Nptc9fX1IiUlRVy8eLHbeo58LBaLWLdundiwYYONvaKiovPvGhcX
      J44cOWJ3jM74/Nz06tGIDlwlCuTy5cts3ryZDRs29Lh9+qCi6CmQ5N6wWq0cP36cFStWDMiT
      H3r5cFzZASSDDdkBJIpGCkCiaKQAJIpGCkCiaKQAJIpGCkCiaKQAJIpGCkCiaKQAJIrm/wG0
      tjTFHQ+gDgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAFcUlEQVR4nO3ba2/aZhyG8ducjTmTNOlhq7Tt+3+gSlPbZW3COBsHAhh7rxpNo5saJamb
      3NfvpSWkvwUXz/NwCPI8zwWYKhU9AFCkewWQJIlYQPCU3SuALMseag6gEGyBYI0AYI0A8BUH
      /f7unT5+vFCa/f8Zbzz6rMUy1uZmJ0nK81zj8ViSFM/mSiUtZnP9qJvlStED4EeUq95s63zY
      0OjTZ8U3qbpRWfv9XmGjqUVyrVq1rrdvznU1GuunN2XNZlutlhP1Twbab/f69Md7xautfhv0
      tV2vdJEs1KhHmk4nqkcdlfbXijp9TScT1Vs9/fLzq0LulBUAX5VlmRbLRGFY1en5SynLdXoy
      0O5mq053oHKQS6Wy+oOheu2m0v1OebmuKGpJkvKgom67KUkqVet69fqV0vVK5XpLvU5LzVZP
      7bCsSiNStx0Vdp/Bfb4Ii+NY7XZbQRA85EwoXK7p+C/Vmh21GhWlKqusg6azWP12TR8u53rz
      +qUataq2263q1bK2qbTbrFSqNlQpl5SlO212mXr9rg67nSrVitI00zpZqlyPVKuUVKtWtZjP
      VA1bisJ6IXdKALiTLy+X5/KccwbAnTyXF/4XnAFg7XYFSJJEh8PhTg/ebDb8FAJP2m0ArVbr
      zg8OgoAzAJ40tkCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwdhTAdbLS5mZXxCzAd1f594XR1ZXC
      Rk373gtl6U71Rl2L+Vwnp6eK5zOV6k31Oi0FRUwLPLCjFaDWCHV2NtR6NtY43moxnWgwHGp0
      +adu0pLW8UJ5XsSowMM7WgE217EuPh90ftpXJa2pdkh0dXmpKIo0ncwVtnj3x/MR5Pk3vp9n
      ey2SnXqd6PZSHMdqt9sKApLA03S0AvynUlW9TvURRwG+v6MzwHaTaDyda7PZ3F67ThJluaQ8
      0/of14Gn7mgFuHj/XtGLN9rcbLVeLbVJA5W1VymQxpOJglqkZhgWMSvw4I5WgE6nr+Gwq/X6
      WpeXV9qs18olxctYp2dnKrHdxzNytAJ0T05UUaCT4VD9TkvrXa5O1FClUtZkMtOg3y9iTuBR
      fPunQF/Bp0B46o62QPfoAXhyjgIYjS61WCyV57nixULpIdNuu9HNdqd4udD+kBUxJ/Aojs4A
      6X4vlVb6cJFonSwVRiul2xudDlr6NJorbF3r17evi5gVeHBHAVRrDbWjipb7VGEz0qDX1XYX
      qlEvKQybGvZ7RcwJPAoOwbDGH2JgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBg
      jQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBg
      jQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBg
      jQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBg
      jQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBg7W8oLWp4uH/H
      2wAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
