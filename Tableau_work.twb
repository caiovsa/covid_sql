<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Table 1' inline='true' name='federated.0pnxakk0xa5fv51h42cel1akd82e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1rf3g460jqyspj1ahulyk1eqkh3h'>
            <connection authentication='username-password' class='postgres' dbname='CovidPortfolio' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1rf3g460jqyspj1ahulyk1eqkh3h' name='Custom SQL Query' type='text'>SELECT SUM(NEW_CASES) AS TOTAL_CASES, SUM(NEW_DEATHS) AS TOTAL_DEATHS,&#13;
SUM(NEW_DEATHS)/SUM(NEW_CASES) * 100 AS DEATHPERCENTAGE&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE CONTINENT IS NOT NULL&#13;
ORDER BY 1,2</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1rf3g460jqyspj1ahulyk1eqkh3h' name='Custom SQL Query' type='text'>SELECT SUM(NEW_CASES) AS TOTAL_CASES, SUM(NEW_DEATHS) AS TOTAL_DEATHS,&#13;
SUM(NEW_DEATHS)/SUM(NEW_CASES) * 100 AS DEATHPERCENTAGE&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE CONTINENT IS NOT NULL&#13;
ORDER BY 1,2</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F2E1D5E7732E4D3B9E1E45EE84032E2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F2E1D5E7732E4D3B9E1E45EE84032E2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathpercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deathpercentage]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>deathpercentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F2E1D5E7732E4D3B9E1E45EE84032E2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_F2E1D5E7732E4D3B9E1E45EE84032E2B]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_F2E1D5E7732E4D3B9E1E45EE84032E2B'>
            <properties context=''>
              <relation connection='postgres.1rf3g460jqyspj1ahulyk1eqkh3h' name='Custom SQL Query' type='text'>SELECT SUM(NEW_CASES) AS TOTAL_CASES, SUM(NEW_DEATHS) AS TOTAL_DEATHS,&#13;
SUM(NEW_DEATHS)/SUM(NEW_CASES) * 100 AS DEATHPERCENTAGE&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE CONTINENT IS NOT NULL&#13;
ORDER BY 1,2</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Table 2' inline='true' name='federated.1892qk80bomox41fqghfk0voert9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.00zdduu0xlfcxb1048sq60cme7tp'>
            <connection authentication='username-password' class='postgres' dbname='CovidPortfolio' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.00zdduu0xlfcxb1048sq60cme7tp' name='Custom SQL Query' type='text'>SELECT LOCATION, SUM(NEW_DEATHS) AS TOTALDEATHCOUNT&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE CONTINENT IS NULL&#13;
AND LOCATION IN(&apos;Europe&apos;,&apos;Asia&apos;,&apos;North America&apos;,&apos;South America&apos;, &apos;Africa&apos;, &apos;Oceania&apos;)&#13;
-- AND LOCATION NOT IN (&apos;World&apos;,&apos;European Union&apos;,&apos;International&apos;, &apos;High income&apos;, &apos;Upper middle income&apos;, &apos;Lower middle income&apos;, &apos;Low income&apos;)&#13;
GROUP BY LOCATION&#13;
ORDER BY TOTALDEATHCOUNT DESC</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.00zdduu0xlfcxb1048sq60cme7tp' name='Custom SQL Query' type='text'>SELECT LOCATION, SUM(NEW_DEATHS) AS TOTALDEATHCOUNT&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE CONTINENT IS NULL&#13;
AND LOCATION IN(&apos;Europe&apos;,&apos;Asia&apos;,&apos;North America&apos;,&apos;South America&apos;, &apos;Africa&apos;, &apos;Oceania&apos;)&#13;
-- AND LOCATION NOT IN (&apos;World&apos;,&apos;European Union&apos;,&apos;International&apos;, &apos;High income&apos;, &apos;Upper middle income&apos;, &apos;Lower middle income&apos;, &apos;Low income&apos;)&#13;
GROUP BY LOCATION&#13;
ORDER BY TOTALDEATHCOUNT DESC</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LPT_RBR' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4121637A974B4D4B855AC6607BBA89BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totaldeathcount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[totaldeathcount]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>totaldeathcount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4121637A974B4D4B855AC6607BBA89BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_4121637A974B4D4B855AC6607BBA89BD]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_4121637A974B4D4B855AC6607BBA89BD'>
            <properties context=''>
              <relation connection='postgres.00zdduu0xlfcxb1048sq60cme7tp' name='Custom SQL Query' type='text'>SELECT LOCATION, SUM(NEW_DEATHS) AS TOTALDEATHCOUNT&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE CONTINENT IS NULL&#13;
AND LOCATION IN(&apos;Europe&apos;,&apos;Asia&apos;,&apos;North America&apos;,&apos;South America&apos;, &apos;Africa&apos;, &apos;Oceania&apos;)&#13;
-- AND LOCATION NOT IN (&apos;World&apos;,&apos;European Union&apos;,&apos;International&apos;, &apos;High income&apos;, &apos;Upper middle income&apos;, &apos;Lower middle income&apos;, &apos;Low income&apos;)&#13;
GROUP BY LOCATION&#13;
ORDER BY TOTALDEATHCOUNT DESC</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Table 3' inline='true' name='federated.15cthgo1h46r2j1g3bghi0ejck6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0kmcdzs0ukwy4u18i0s061kbkzob'>
            <connection authentication='username-password' class='postgres' dbname='CovidPortfolio' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0kmcdzs0ukwy4u18i0s061kbkzob' name='Custom SQL Query' type='text'>SELECT LOCATION, POPULATION, MAX(TOTAL_CASES) AS HIGHESTINFECTIONCOUNT,&#13;
MAX((TOTAL_CASES / POPULATION)) * 100 AS PERCENTPOPULATIONINFECTED&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE (continent IS NOT NULL)&#13;
GROUP BY LOCATION, POPULATION&#13;
ORDER BY PERCENTPOPULATIONINFECTED DESC</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0kmcdzs0ukwy4u18i0s061kbkzob' name='Custom SQL Query' type='text'>SELECT LOCATION, POPULATION, MAX(TOTAL_CASES) AS HIGHESTINFECTIONCOUNT,&#13;
MAX((TOTAL_CASES / POPULATION)) * 100 AS PERCENTPOPULATIONINFECTED&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE (continent IS NOT NULL)&#13;
GROUP BY LOCATION, POPULATION&#13;
ORDER BY PERCENTPOPULATIONINFECTED DESC</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LPT_RBR' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F34A8F642D3A4E92A6C5FA1107C9FDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F34A8F642D3A4E92A6C5FA1107C9FDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highestinfectioncount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[highestinfectioncount]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>highestinfectioncount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F34A8F642D3A4E92A6C5FA1107C9FDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentpopulationinfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentpopulationinfected]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>percentpopulationinfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F34A8F642D3A4E92A6C5FA1107C9FDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_F34A8F642D3A4E92A6C5FA1107C9FDA7]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_F34A8F642D3A4E92A6C5FA1107C9FDA7'>
            <properties context=''>
              <relation connection='postgres.0kmcdzs0ukwy4u18i0s061kbkzob' name='Custom SQL Query' type='text'>SELECT LOCATION, POPULATION, MAX(TOTAL_CASES) AS HIGHESTINFECTIONCOUNT,&#13;
MAX((TOTAL_CASES / POPULATION)) * 100 AS PERCENTPOPULATIONINFECTED&#13;
FROM PUBLIC.&quot;CovidDeaths&quot; &#13;
WHERE (continent IS NOT NULL)&#13;
GROUP BY LOCATION, POPULATION&#13;
ORDER BY PERCENTPOPULATIONINFECTED DESC</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Table 4' inline='true' name='federated.01luxnc1bchrmd1ehlojq1nxisoh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1gf6s7s1bba6qv14psh901hb833f'>
            <connection authentication='username-password' class='postgres' dbname='CovidPortfolio' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1gf6s7s1bba6qv14psh901hb833f' name='Custom SQL Query' type='text'>SELECT LOCATION, POPULATION, date, MAX(TOTAL_CASES) AS HIGHESTINFECTIONCOUNT,&#13;
MAX((TOTAL_CASES / POPULATION)) * 100 AS PERCENTPOPULATIONINFECTED&#13;
FROM PUBLIC.&quot;CovidDeaths&quot;&#13;
WHERE TOTAL_CASES IS NOT NULL&#13;
GROUP BY LOCATION, POPULATION, date&#13;
ORDER BY PERCENTPOPULATIONINFECTED DESC</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1gf6s7s1bba6qv14psh901hb833f' name='Custom SQL Query' type='text'>SELECT LOCATION, POPULATION, date, MAX(TOTAL_CASES) AS HIGHESTINFECTIONCOUNT,&#13;
MAX((TOTAL_CASES / POPULATION)) * 100 AS PERCENTPOPULATIONINFECTED&#13;
FROM PUBLIC.&quot;CovidDeaths&quot;&#13;
WHERE TOTAL_CASES IS NOT NULL&#13;
GROUP BY LOCATION, POPULATION, date&#13;
ORDER BY PERCENTPOPULATIONINFECTED DESC</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LPT_RBR' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AA295ABB632A43A5B4B8FF2D07D2E16B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AA295ABB632A43A5B4B8FF2D07D2E16B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AA295ABB632A43A5B4B8FF2D07D2E16B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highestinfectioncount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[highestinfectioncount]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>highestinfectioncount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AA295ABB632A43A5B4B8FF2D07D2E16B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentpopulationinfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentpopulationinfected]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>percentpopulationinfected</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AA295ABB632A43A5B4B8FF2D07D2E16B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_AA295ABB632A43A5B4B8FF2D07D2E16B]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_AA295ABB632A43A5B4B8FF2D07D2E16B'>
            <properties context=''>
              <relation connection='postgres.1gf6s7s1bba6qv14psh901hb833f' name='Custom SQL Query' type='text'>SELECT LOCATION, POPULATION, date, MAX(TOTAL_CASES) AS HIGHESTINFECTIONCOUNT,&#13;
MAX((TOTAL_CASES / POPULATION)) * 100 AS PERCENTPOPULATIONINFECTED&#13;
FROM PUBLIC.&quot;CovidDeaths&quot;&#13;
WHERE TOTAL_CASES IS NOT NULL&#13;
GROUP BY LOCATION, POPULATION, date&#13;
ORDER BY PERCENTPOPULATIONINFECTED DESC</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Table 1' name='federated.0pnxakk0xa5fv51h42cel1akd82e' />
          </datasources>
          <datasource-dependencies datasource='federated.0pnxakk0xa5fv51h42cel1akd82e'>
            <column datatype='real' name='[deathpercentage]' role='measure' type='quantitative' />
            <column-instance column='[deathpercentage]' derivation='Sum' name='[sum:deathpercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pnxakk0xa5fv51h42cel1akd82e].[sum:deathpercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pnxakk0xa5fv51h42cel1akd82e].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pnxakk0xa5fv51h42cel1akd82e].[sum:total_cases:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0pnxakk0xa5fv51h42cel1akd82e].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0pnxakk0xa5fv51h42cel1akd82e].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0pnxakk0xa5fv51h42cel1akd82e].[sum:deathpercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='3' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='tick-color' value='#000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]' value='203' />
            <format attr='height' value='43' />
            <format attr='text-format' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-align' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='center' />
            <format attr='text-orientation' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='0' />
            <format attr='vertical-align' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='center' />
            <format attr='wrap' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='auto' />
            <format attr='font-weight' data-class='total' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='normal' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='color' data-class='total' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]' value='#aaaaff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='3' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='true' />
            <format attr='break-on-special' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='true' />
            <format attr='show-null-value-warning' field='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' value='true' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='3' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='3' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='3' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='3' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='3' />
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pnxakk0xa5fv51h42cel1akd82e].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='3' />
                <format attr='stroke-color' value='#1b1b1b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{72EAD59D-2A7D-4C3C-9BCF-37F3CD642EB8}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Table 2' name='federated.1892qk80bomox41fqghfk0voert9' />
          </datasources>
          <datasource-dependencies datasource='federated.1892qk80bomox41fqghfk0voert9'>
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[totaldeathcount]' derivation='Sum' name='[sum:totaldeathcount:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[totaldeathcount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1892qk80bomox41fqghfk0voert9].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1892qk80bomox41fqghfk0voert9].[none:location:nk]' value='135' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='56' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
            <format attr='font-style' value='normal' />
            <format attr='background-color' value='#ffffff' />
            <format attr='font-size' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1892qk80bomox41fqghfk0voert9].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1892qk80bomox41fqghfk0voert9].[sum:totaldeathcount:qk]</rows>
        <cols>[federated.1892qk80bomox41fqghfk0voert9].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{EA67B32E-23D3-4C99-8D2F-37066BC3636A}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percent Pop. Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Table 3' name='federated.15cthgo1h46r2j1g3bghi0ejck6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15cthgo1h46r2j1g3bghi0ejck6r'>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[percentpopulationinfected]' role='measure' type='quantitative' />
            <column-instance column='[percentpopulationinfected]' derivation='Sum' name='[sum:percentpopulationinfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[Longitude (generated)]' field-type='quantitative' max='15979360.631067015' min='-20573700.555763554' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[Latitude (generated)]' field-type='quantitative' max='19384881.106198147' min='-10500364.00555481' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[sum:percentpopulationinfected:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[sum:percentpopulationinfected:qk]' value='Percent Pop. Infected&#10;'>
              <formatted-text>
                <run>Percent Pop. Infected&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[none:location:nk]' />
              <color column='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[sum:percentpopulationinfected:qk]' />
              <geometry column='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15cthgo1h46r2j1g3bghi0ejck6r].[Latitude (generated)]</rows>
        <cols>[federated.15cthgo1h46r2j1g3bghi0ejck6r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{621E4738-CA6D-40DF-BF08-AF98539B0EA3}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Table 4' name='federated.01luxnc1bchrmd1ehlojq1nxisoh' />
          </datasources>
          <datasource-dependencies datasource='federated.01luxnc1bchrmd1ehlojq1nxisoh'>
            <column-instance column='[percentpopulationinfected]' derivation='Avg' name='[avg:percentpopulationinfected:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[percentpopulationinfected]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[tmn:date:qk]' value='189' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]' />
              <text column='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01luxnc1bchrmd1ehlojq1nxisoh].[avg:percentpopulationinfected:qk]</rows>
        <cols>[federated.01luxnc1bchrmd1ehlojq1nxisoh].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{CEF6568E-5ADE-4BA9-BF7E-EF98157E5BBA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='9' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='7' type-v2='layout-basic' w='89378' x='483' y='940'>
              <zone h='15394' id='3' name='Sheet 1' w='46530' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='5' name='Sheet 2' w='42848' x='47013' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='73913' id='6' name='Sheet 3' w='46530' x='483' y='16334'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='11' name='Sheet 4' w='42848' x='47013' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8813' id='13' name='Sheet 3' pane-specification-id='0' param='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[sum:percentpopulationinfected:qk]' type-v2='color' w='46530' x='483' y='90247'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='940'>
              <zone fixed-size='147' h='18214' id='12' is-fixed='true' name='Sheet 4' pane-specification-id='0' param='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]' type-v2='color' w='9656' x='89861' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='16' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='115' h='15394' id='3' is-fixed='true' name='Sheet 1' w='46530' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='5' is-fixed='true' name='Sheet 2' w='42848' x='47013' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73913' id='6' is-fixed='true' name='Sheet 3' w='46530' x='483' y='16334'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8813' id='13' name='Sheet 3' pane-specification-id='0' param='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[sum:percentpopulationinfected:qk]' type-v2='color' w='46530' x='483' y='90247'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='11' is-fixed='true' name='Sheet 4' w='42848' x='47013' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='147' h='18214' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]' type-v2='color' w='9656' x='89861' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D7F97685-19CA-4E46-BED3-28E58E182C0C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pnxakk0xa5fv51h42cel1akd82e].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8ED303A-5C60-4760-ACD6-52D267641A00}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1892qk80bomox41fqghfk0voert9].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B72BF3A9-01CC-4ED3-8C53-025546E578D6}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15cthgo1h46r2j1g3bghi0ejck6r].[sum:percentpopulationinfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15cthgo1h46r2j1g3bghi0ejck6r].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6B22F279-9CB1-4D16-B30D-9113E274096A}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='172'>
            <card pane-specification-id='0' param='[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]</field>
            <field>[federated.01luxnc1bchrmd1ehlojq1nxisoh].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7AA71B31-2AFB-4CD7-B535-060A793811A5}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.01luxnc1bchrmd1ehlojq1nxisoh].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AEF464C6-C949-486D-8FEC-60B8A8D75568}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      OeL/B1ZJ8/Kabr6EAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='68' name='Sheet 1' width='192'>
      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
      X0ePHiU8PJyjR4+yY8cOpxfZDQ0NnDt3jpiYGDt7UVFRj9uPzvj8gJubGxMnTuTUqVNYrdZO
      +6VLl3B1dSUwMNApn/5C0QI4ffo0SUlJnD17lvb2dtrb2zl48CD79u3j+eefByAwMJAnn3yS
      9evXU1tbS3t7O9u3b6exsRGNRtNlXpPJRFpaGhkZGZ0LOq1Wy7p16xg9ejRjxozp9DUYDBQU
      FJCYmPiT7X/X19ezd+9em9pr164lIiLCbip18uRJRo4c2e30yFmfu4mLi6O4uJjc3FysVisV
      FRV88MEHPPvss53id8anX3C0T8oAvQ9QWloqYmNjRWRkpN0rPj5e6HQ6YbFYRHFxsVi0aJGI
      iooSUVFRYtGiReL8+fM2udra2sS2bdvE9OnTRVRUlFi1apXdPnxqaqpITU3t/N1gMIj33ntP
      zJgxQ0RGRooZM2aIjz/+WLS0tNjE5eTkiLfffltYLBanjkun09ndBygtLRXx8fGd9zlaWlrE
      li1bOmvHxcWJXbt2iba2Nptc9fX1IiUlRVy8eLHbeo58LBaLWLdundiwYYONvaKiovPvGhcX
      J44cOWJ3jM74/Nz06tGIDlwlCuTy5cts3ryZDRs29Lh9+qCi6CmQ5N6wWq0cP36cFStWDMiT
      H3r5cFzZASSDDdkBJIpGCkCiaKQAJIpGCkCiaKQAJIpGCkCiaKQAJIpGCkCiaKQAJIpGCkCi
      aP4fR840xyNKCjwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      0oevhNqp5BAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      Nf3UAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
